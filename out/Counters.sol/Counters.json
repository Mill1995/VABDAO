{"abi":[],"bytecode":{"object":"0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220884b6daacddf33903bea4d9586b47f01424d55e42d91b907ec9673a0cc235edc64736f6c63430008180033","sourceMap":"424:971:75:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220884b6daacddf33903bea4d9586b47f01424d55e42d91b907ec9673a0cc235edc64736f6c63430008180033","sourceMap":"424:971:75:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=node_modules/@ensdomains/","@ethereum-waffle/=node_modules/@ethereum-waffle/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/Counters.sol":"Counters"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Counters.sol","id":73255,"exportedSymbols":{"Counters":[73254]},"nodeType":"SourceUnit","src":"87:1309:75","nodes":[{"id":73182,"nodeType":"PragmaDirective","src":"87:23:75","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":73254,"nodeType":"ContractDefinition","src":"424:971:75","nodes":[{"id":73186,"nodeType":"StructDefinition","src":"447:374:75","nodes":[],"canonicalName":"Counters.Counter","members":[{"constant":false,"id":73185,"mutability":"mutable","name":"_value","nameLocation":"794:6:75","nodeType":"VariableDeclaration","scope":73186,"src":"786:14:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73184,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:75","scope":73254,"visibility":"public"},{"id":73198,"nodeType":"FunctionDefinition","src":"827:112:75","nodes":[],"body":{"id":73197,"nodeType":"Block","src":"901:38:75","nodes":[],"statements":[{"expression":{"expression":{"id":73194,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73189,"src":"918:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":73195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:75","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":73185,"src":"918:14:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":73193,"id":73196,"nodeType":"Return","src":"911:21:75"}]},"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:75","parameters":{"id":73190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73189,"mutability":"mutable","name":"counter","nameLocation":"860:7:75","nodeType":"VariableDeclaration","scope":73198,"src":"844:23:75","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":73188,"nodeType":"UserDefinedTypeName","pathNode":{"id":73187,"name":"Counter","nameLocations":["844:7:75"],"nodeType":"IdentifierPath","referencedDeclaration":73186,"src":"844:7:75"},"referencedDeclaration":73186,"src":"844:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:75"},"returnParameters":{"id":73193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":73198,"src":"892:7:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73191,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:75"},"scope":73254,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":73212,"nodeType":"FunctionDefinition","src":"945:123:75","nodes":[],"body":{"id":73211,"nodeType":"Block","src":"998:70:75","nodes":[],"statements":[{"id":73210,"nodeType":"UncheckedBlock","src":"1008:54:75","statements":[{"expression":{"id":73208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":73204,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73201,"src":"1032:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":73206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:75","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":73185,"src":"1032:14:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":73207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:75","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73209,"nodeType":"ExpressionStatement","src":"1032:19:75"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:75","parameters":{"id":73202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73201,"mutability":"mutable","name":"counter","nameLocation":"980:7:75","nodeType":"VariableDeclaration","scope":73212,"src":"964:23:75","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":73200,"nodeType":"UserDefinedTypeName","pathNode":{"id":73199,"name":"Counter","nameLocations":["964:7:75"],"nodeType":"IdentifierPath","referencedDeclaration":73186,"src":"964:7:75"},"referencedDeclaration":73186,"src":"964:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:75"},"returnParameters":{"id":73203,"nodeType":"ParameterList","parameters":[],"src":"998:0:75"},"scope":73254,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":73240,"nodeType":"FunctionDefinition","src":"1074:229:75","nodes":[],"body":{"id":73239,"nodeType":"Block","src":"1127:176:75","nodes":[],"statements":[{"assignments":[73219],"declarations":[{"constant":false,"id":73219,"mutability":"mutable","name":"value","nameLocation":"1145:5:75","nodeType":"VariableDeclaration","scope":73239,"src":"1137:13:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":73222,"initialValue":{"expression":{"id":73220,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73215,"src":"1153:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":73221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:75","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":73185,"src":"1153:14:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:75"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":73226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":73224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73219,"src":"1185:5:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":73225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:75","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:75","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":73227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:75","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":73223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:75","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":73228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:75","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73229,"nodeType":"ExpressionStatement","src":"1177:49:75"},{"id":73238,"nodeType":"UncheckedBlock","src":"1236:61:75","statements":[{"expression":{"id":73236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":73230,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73215,"src":"1260:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":73232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:75","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":73185,"src":"1260:14:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":73235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":73233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73219,"src":"1277:5:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":73234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:75","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73237,"nodeType":"ExpressionStatement","src":"1260:26:75"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:75","parameters":{"id":73216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73215,"mutability":"mutable","name":"counter","nameLocation":"1109:7:75","nodeType":"VariableDeclaration","scope":73240,"src":"1093:23:75","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":73214,"nodeType":"UserDefinedTypeName","pathNode":{"id":73213,"name":"Counter","nameLocations":["1093:7:75"],"nodeType":"IdentifierPath","referencedDeclaration":73186,"src":"1093:7:75"},"referencedDeclaration":73186,"src":"1093:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:75"},"returnParameters":{"id":73217,"nodeType":"ParameterList","parameters":[],"src":"1127:0:75"},"scope":73254,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":73253,"nodeType":"FunctionDefinition","src":"1309:84:75","nodes":[],"body":{"id":73252,"nodeType":"Block","src":"1358:35:75","nodes":[],"statements":[{"expression":{"id":73250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":73246,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73243,"src":"1368:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":73248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:75","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":73185,"src":"1368:14:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":73249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:75","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73251,"nodeType":"ExpressionStatement","src":"1368:18:75"}]},"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:75","parameters":{"id":73244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73243,"mutability":"mutable","name":"counter","nameLocation":"1340:7:75","nodeType":"VariableDeclaration","scope":73253,"src":"1324:23:75","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":73242,"nodeType":"UserDefinedTypeName","pathNode":{"id":73241,"name":"Counter","nameLocations":["1324:7:75"],"nodeType":"IdentifierPath","referencedDeclaration":73186,"src":"1324:7:75"},"referencedDeclaration":73186,"src":"1324:7:75","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$73186_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:75"},"returnParameters":{"id":73245,"nodeType":"ParameterList","parameters":[],"src":"1358:0:75"},"scope":73254,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":73183,"nodeType":"StructuredDocumentation","src":"112:311:75","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"linearizedBaseContracts":[73254],"name":"Counters","nameLocation":"432:8:75","scope":73255,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":75}